/* === List View Enhanced Styles === */
:root {
    --primary-color: #4f46e5;
    --primary-light: #818cf8;
    --primary-dark: #4338ca;
    --primary-color-rgb: 79, 70, 229;
    
    --success-color: #10b981;
    --success-light: #d1fae5;
    --success-dark: #065f46;
    
    --danger-color: #ef4444;
    --danger-light: #fee2e2;
    --danger-dark: #b91c1c;
    
    --warning-color: #f59e0b;
    --warning-light: #fef3c7;
    --warning-dark: #d97706;
    
    --bg-color: #f9fafb;
    --card-bg: #ffffff;
    --card-bg-light: #f8fafc;
    --text-color: #1e293b;
    --text-secondary: #64748b;
    --text-muted: #94a3b8;
    --heading-color: #0f172a;
    --border-color: #e2e8f0;
    --border-muted: #f1f5f9;
    
    --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.07);
    --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
    
    --border-radius-sm: 0.25rem;
    --border-radius-md: 0.5rem;
    --border-radius-lg: 0.75rem;
    
    --transition-fast: 0.2s ease;
    --transition-normal: 0.3s ease;
    --transition-slow: 0.5s ease;
  }
  
  /* Dark mode variables */
  [data-theme="dark"] {
    --primary-color: #6366f1;
    --primary-light: #818cf8;
    --primary-dark: #4f46e5;
    
    --bg-color: #0f172a;
    --card-bg: #1e293b;
    --card-bg-light: #334155;
    --text-color: #f1f5f9;
    --text-secondary: #cbd5e1;
    --text-muted: #94a3b8;
    --heading-color: #f8fafc;
    --border-color: #334155;
    --border-muted: #1e293b;
    
    --success-light: #064e3b;
    --danger-light: #7f1d1d;
    --warning-light: #78350f;
  }
  
  /* === List View Container === */
  .listViewContainer {
    padding: 1rem;
    background-color: var(--card-bg);
    border-radius: var(--border-radius-md);
    animation: fadeIn 0.4s ease-in-out;
    position: relative;
    overflow: hidden;
    margin-bottom: 1rem;
  }
  
  /* Decorative background patterns */
  .listViewContainer::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 200px;
    height: 200px;
    background: radial-gradient(circle at center, rgba(var(--primary-color-rgb), 0.1) 0%, transparent 70%);
    opacity: 0.5;
    z-index: 0;
    border-top-right-radius: var(--border-radius-md);
  }
  
  /* Filters Section */
  .filtersContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 1.25rem;
    margin-bottom: 1.5rem;
    padding: 1.25rem;
    background-color: var(--card-bg-light);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    position: relative;
    z-index: 1;
    animation: slideDown 0.5s ease-in-out;
    border: 1px solid var(--border-muted);
  }
  
  .searchContainer {
    flex: 1;
    min-width: 250px;
    position: relative;
  }
  
  .searchContainer::before {
    content: 'üîç';
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-muted);
    pointer-events: none;
  }
  
  .searchInput {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    font-size: 0.95rem;
    background-color: var(--card-bg);
    color: var(--text-color);
    transition: all var(--transition-normal);
    box-shadow: var(--shadow-sm);
  }
  
  .searchInput::placeholder {
    color: var(--text-muted);
  }
  
  .searchInput:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.1);
  }
  
  .filterControls {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
  }
  
  .filterGroup {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    animation: fadeIn 0.5s ease-in-out;
  }
  
  .filterGroup label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
    white-space: nowrap;
    transition: color var(--transition-fast);
  }
  
  .filterGroup:hover label {
    color: var(--primary-color);
  }
  
  .filterSelect {
    padding: 0.5rem 2.5rem 0.5rem 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    font-size: 0.875rem;
    background-color: var(--card-bg);
    color: var(--text-color);
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 1.25rem;
    cursor: pointer;
    transition: all var(--transition-normal);
    min-width: 140px;
  }
  
  .filterSelect:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.1);
  }
  
  .filterSelect:hover {
    border-color: var(--primary-color);
  }
  
  /* Table Container */
  .tableContainer {
    border-radius: var(--border-radius-md);
    overflow: hidden;
    box-shadow: var(--shadow-md);
    border: 1px solid var(--border-color);
    position: relative;
    z-index: 1;
    animation: fadeIn 0.5s ease-in-out;
    background-color: var(--card-bg);
  }
  
  .taskTable {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.95rem;
    background-color: var(--card-bg);
  }
  
  /* Table Header */
  .taskTable thead {
    background-color: var(--card-bg-light);
    position: sticky;
    top: 0;
    z-index: 2;
  }
  
  .taskTable th {
    padding: 1rem;
    text-align: left;
    font-weight: 600;
    color: var(--text-secondary);
    border-bottom: 2px solid var(--border-color);
    position: relative;
    transition: all var(--transition-fast);
  }
  
  .sortableHeader {
    cursor: pointer;
    user-select: none;
    padding-right: 2rem !important;
    position: relative;
  }
  
  .sortableHeader:hover {
    color: var(--primary-color);
    background-color: rgba(var(--primary-color-rgb), 0.05);
  }
  
  .sortIndicator {
    position: absolute;
    right: 1rem;
    font-size: 0.875rem;
    color: var(--primary-color);
    animation: fadeIn 0.3s ease-in-out;
  }
  
  /* Table Rows */
  .taskRow {
    transition: background-color var(--transition-fast);
    border-bottom: 1px solid var(--border-muted);
    animation: fadeIn 0.4s ease-in-out;
  }
  
  .taskRow:hover {
    background-color: rgba(var(--primary-color-rgb), 0.03);
  }
  
  .taskRow:last-child {
    border-bottom: none;
  }
  
  /* High priority row highlight */
  .taskRow.highPriority {
    border-left: 3px solid var(--danger-color);
  }
  
  .taskRow.mediumPriority {
    border-left: 3px solid var(--warning-color);
  }
  
  .taskRow.lowPriority {
    border-left: 3px solid var(--success-color);
  }
  
  /* Table Cells */
  .taskTable td {
    padding: 1rem;
    vertical-align: top;
    position: relative;
  }
  
  /* Task Title Cell */
  .taskTitleCell {
    max-width: 300px;
    width: 40%;
  }
  
  .taskTitleContainer {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .taskTitle {
    font-weight: 600;
    color: var(--heading-color);
    margin-bottom: 0.25rem;
    transition: color var(--transition-fast);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .taskRow:hover .taskTitle {
    color: var(--primary-color);
  }
  
  .taskDescription {
    font-size: 0.875rem;
    color: var(--text-secondary);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    line-height: 1.4;
  }
  
  /* Priority Badge */
  .priorityBadge {
    display: inline-flex;
    align-items: center;
    padding: 0.375rem 0.75rem;
    border-radius: var(--border-radius-lg);
    font-size: 0.75rem;
    font-weight: 600;
    transition: all var(--transition-normal);
  }
  
  /* Priority badges with indicator dots */
  .priorityBadge::before {
    content: '';
    display: inline-block;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    margin-right: 0.375rem;
  }
  
  .highPriority {
    background-color: var(--danger-light);
    color: var(--danger-color);
  }
  
  .highPriority::before {
    background-color: var(--danger-color);
  }
  
  .mediumPriority {
    background-color: var(--warning-light);
    color: var(--warning-color);
  }
  
  .mediumPriority::before {
    background-color: var(--warning-color);
  }
  
  .lowPriority {
    background-color: var(--success-light);
    color: var(--success-color);
  }
  
  .lowPriority::before {
    background-color: var(--success-color);
  }
  
  /* Status Badge */
  .statusBadge {
    display: inline-block;
    padding: 0.375rem 0.75rem;
    border-radius: var(--border-radius-lg);
    font-size: 0.75rem;
    font-weight: 500;
    background-color: var(--card-bg-light);
    color: var(--text-secondary);
    border: 1px solid var(--border-color);
    transition: all var(--transition-normal);
  }
  
  .statusBadge.todo {
    background-color: var(--card-bg-light);
    color: var(--text-secondary);
  }
  
  .statusBadge.inProgress {
    background-color: rgba(var(--primary-color-rgb), 0.1);
    color: var(--primary-color);
    border-color: var(--primary-light);
  }
  
  .statusBadge.done {
    background-color: var(--success-light);
    color: var(--success-color);
    border-color: var(--success-color);
  }
  
  /* Due Date */
  .dueDateContainer {
    display: flex;
    flex-direction: column;
    gap: 0.375rem;
  }
  
  .dueDate {
    font-size: 0.875rem;
    color: var(--text-color);
    font-weight: 500;
  }
  
  .daysLeft {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: var(--border-radius-sm);
    display: inline-block;
    font-weight: 500;
  }
  
  .overdue {
    color: white;
    background-color: var(--danger-color);
    animation: pulseFade 2s infinite;
  }
  
  .dueToday {
    color: white;
    background-color: var(--warning-color);
    animation: pulseFade 2s infinite;
  }
  
  .upcoming {
    color: var(--text-secondary);
    background-color: var(--card-bg-light);
  }
  
  .noDueDate {
    font-size: 0.75rem;
    font-style: italic;
    color: var(--text-muted);
  }
  
  /* Assignee List */
  .assigneesList {
    display: flex;
    justify-content: flex-end;
  }
  
  .assigneesContainer {
    display: flex;
  }
  
  .assigneeInitial {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 0.75rem;
    margin-left: -0.5rem;
    border: 2px solid var(--card-bg);
    transition: transform var(--transition-fast), box-shadow var(--transition-fast);
    position: relative;
    box-shadow: var(--shadow-sm);
    cursor: pointer;
  }
  
  .assigneeInitial:first-child {
    margin-left: 0;
  }
  
  .assigneeInitial:hover {
    transform: translateY(-3px);
    z-index: 5;
    box-shadow: var(--shadow-md);
  }
  
  /* Assignee tooltip */
  .assigneeInitial::after {
    content: attr(title);
    position: absolute;
    bottom: -2.5rem;
    left: 50%;
    transform: translateX(-50%) scale(0.9);
    white-space: nowrap;
    padding: 0.375rem 0.75rem;
    background-color: var(--heading-color);
    color: white;
    border-radius: var(--border-radius-sm);
    font-size: 0.75rem;
    pointer-events: none;
    opacity: 0;
    transition: all var(--transition-normal);
    box-shadow: var(--shadow-md);
    z-index: 10;
  }
  
  .assigneeInitial:hover::after {
    opacity: 1;
    transform: translateX(-50%) scale(1);
    bottom: -2rem;
  }
  
  .unassigned {
    font-size: 0.75rem;
    font-style: italic;
    color: var(--text-muted);
  }
  
  /* Empty state */
  .emptyState {
    text-align: center;
    padding: 3rem 1rem;
    animation: fadeIn 0.5s ease-in-out;
  }
  
  .emptyStateMessage {
    color: var(--text-secondary);
    padding: 1.5rem;
    display: inline-block;
    background-color: var(--card-bg-light);
    border-radius: var(--border-radius-md);
    border: 2px dashed var(--border-muted);
    font-size: 0.95rem;
    max-width: 500px;
    margin: 0 auto;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .filtersContainer {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
    }
    
    .filterControls {
      flex-direction: column;
      align-items: stretch;
    }
    
    .filterGroup {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }
    
    .filterSelect {
      width: 100%;
    }
    
    .taskTable {
      display: block;
      overflow-x: auto;
    }
    
    /* Convert table to cards on mobile */
    .taskTable th {
      display: none;
    }
    
    .taskRow {
      display: flex;
      flex-direction: column;
      padding: 1rem;
      margin-bottom: 1rem;
      border-radius: var(--border-radius-md);
      border: 1px solid var(--border-color);
    }
    
    .taskTable td {
      display: flex;
      padding: 0.5rem 0;
      border-bottom: 1px solid var(--border-muted);
    }
    
    .taskTable td:before {
      content: attr(data-label);
      font-weight: 600;
      width: 120px;
      min-width: 120px;
    }
    
    .taskTitleCell {
      max-width: none;
      width: 100%;
    }
  }
  
  /* Row expand animation */
  .taskRow.expanded {
    background-color: rgba(var(--primary-color-rgb), 0.05);
  }
  
  .taskRow.expanded .taskDescription {
    -webkit-line-clamp: unset;
    max-height: 200px;
    transition: max-height var(--transition-normal);
  }
  
  /* Row click effect */
  .taskRow {
    cursor: pointer;
    position: relative;
  }
  
  .taskRow::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(var(--primary-color-rgb), 0.1);
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--transition-fast);
  }
  
  .taskRow:active::after {
    opacity: 1;
  }
  
  /* Quick Actions */
  .quickActions {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%) translateX(10px);
    opacity: 0;
    display: flex;
    gap: 0.5rem;
    transition: all var(--transition-normal);
    pointer-events: none;
  }
  
  .taskRow:hover .quickActions {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
    pointer-events: auto;
  }
  
  .actionButton {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--card-bg);
    border: 1px solid var(--border-color);
    color: var(--text-secondary);
    cursor: pointer;
    transition: all var(--transition-fast);
  }
  
  .actionButton:hover {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
    transform: scale(1.1);
  }
  
  /* Pagination */
  .pagination {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1.5rem;
  }
  
  .pageButton {
    width: 2.5rem;
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-sm);
    background-color: var(--card-bg);
    border: 1px solid var(--border-color);
    color: var(--text-secondary);
    cursor: pointer;
    transition: all var(--transition-fast);
  }
  
  .pageButton:hover {
    background-color: var(--card-bg-light);
    border-color: var(--primary-color);
    color: var(--primary-color);
  }
  
  .activePage {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }
  
  .activePage:hover {
    background-color: var(--primary-dark);
    color: white;
  }
  
  /* Loading state skeleton */
  .skeleton {
    background: linear-gradient(
      90deg,
      var(--card-bg-light) 25%,
      var(--card-bg) 50%,
      var(--card-bg-light) 75%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: var(--border-radius-sm);
  }
  
  /* Animated checkbox */
  .taskStatus {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .checkbox {
    width: 1.25rem;
    height: 1.25rem;
    border-radius: var(--border-radius-sm);
    border: 2px solid var(--border-color);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all var(--transition-normal);
  }
  
  .checkbox:hover {
    border-color: var(--primary-color);
  }
  
  .checkbox.checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
  }
  
  .checkbox.checked::after {
    content: '‚úì';
    color: white;
    font-weight: bold;
    animation: scaleIn 0.2s ease-in-out;
  }
  
  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideDown {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  @keyframes pulseFade {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }
  
  @keyframes shimmer {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
  }
  
  @keyframes scaleIn {
    from { transform: scale(0); }
    to { transform: scale(1); }
  }