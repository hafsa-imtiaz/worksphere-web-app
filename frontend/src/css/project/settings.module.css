.settingsContainer {
  padding: 1.5rem;
  max-width: 900px;
  margin: 0 auto;
  color: var(--text-primary, #333333);
  transition: all 0.3s ease;
  /* Force visibility for dark mode */
  opacity: 1 !important;
  visibility: visible !important;
}

/* Section styling with reduced whitespace */
.settingsSection {
  background-color: var(--card-bg, white);
  border-radius: 10px;
  padding: 1.25rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  border: 1px solid var(--border-color, #e0e0e0);
  position: relative;
  overflow: hidden;
  /* Modified animations with dark mode protections */
  animation: slideIn 0.5s ease-out forwards;
  opacity: 0;
  transform: translateY(20px);
}

/* Make sure dark mode renders sections immediately */
.darkMode .settingsSection,
:global(.dark-mode) .settingsSection {
  opacity: 1 !important;
  transform: translateY(0) !important;
  animation: none !important;
}

/* Staggered animations for sections (light mode only) */
.settingsSection:nth-child(1) { animation-delay: 0.1s; }
.settingsSection:nth-child(2) { animation-delay: 0.2s; }
.settingsSection:nth-child(3) { animation-delay: 0.3s; }
.settingsSection:nth-child(4) { animation-delay: 0.4s; }
.settingsSection:nth-child(5) { animation-delay: 0.5s; }

@keyframes slideIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.settingsSection::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 4px;
  background: linear-gradient(to bottom, var(--accent-primary, #0088FE), var(--accent-secondary, #00C49F));
  transform: scaleY(0);
  transform-origin: top;
  transition: transform 0.3s ease;
}

.settingsSection:hover::before {
  transform: scaleY(1);
}

.sectionTitle {
  font-size: 1.2rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid var(--border-color, #e0e0e0);
  position: relative;
  transition: color 0.3s ease;
  color: var(--text-primary, #333333);
}

/* Ensure section title is visible in dark mode */
.darkMode .sectionTitle,
:global(.dark-mode) .sectionTitle {
  color: var(--text-primary, #E0E0E0) !important;
}

.settingsGroup {
  display: grid;
  gap: 1rem;
}

/* Button styles */
.primaryButton,
.secondaryButton,
.dangerButton,
.cancelButton {
  padding: 0.6rem 1.2rem;
  border-radius: 6px;
  font-weight: 500;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  position: relative;
  overflow: hidden;
}

.primaryButton {
  background: linear-gradient(135deg, var(--accent-primary, #0088FE), var(--accent-secondary, #00C49F));
  color: white;
  box-shadow: 0 4px 10px rgba(0, 136, 254, 0.2);
}

.primaryButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 15px rgba(0, 136, 254, 0.3);
}

.primaryButton:active {
  transform: translateY(1px);
}

.primaryButton::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.5s ease;
}

.primaryButton:hover::after {
  opacity: 1;
  animation: ripple 1s ease;
}

@keyframes ripple {
  from { transform: scale(0.8); opacity: 0.5; }
  to { transform: scale(1); opacity: 0; }
}

.secondaryButton {
  background-color: transparent;
  color: var(--accent-primary, #0088FE);
  border: 1px solid var(--accent-primary, #0088FE);
}

.secondaryButton:hover {
  background-color: rgba(0, 136, 254, 0.08);
  transform: translateY(-2px);
}

/* Form controls */
.formGroup {
  margin-bottom: 1rem;
}

.formGroup label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: var(--text-secondary, #666666);
  transition: color 0.3s ease;
}

.formSelect {
  width: 100%;
  padding: 0.6rem;
  border-radius: 6px;
  border: 1px solid var(--border-color, #e0e0e0);
  background-color: var(--input-bg, #ffffff);
  color: var(--text-primary, #333333);
  appearance: none;
  transition: all 0.3s ease;
  font-size: 0.9rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23999' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.7rem center;
  background-size: 0.9rem;
  padding-right: 2.5rem;
}

.formSelect:hover {
  border-color: var(--accent-primary-light, #4DABFF);
}

.formSelect:focus {
  outline: none;
  border-color: var(--accent-primary, #0088FE);
  box-shadow: 0 0 0 2px rgba(0, 136, 254, 0.2);
}

/* Custom checkbox styling */
.checkboxGroup {
  display: flex;
  align-items: center;
  margin-bottom: 0.75rem;
  cursor: pointer;
  position: relative;
}

.checkbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkboxGroup label {
  padding-left: 2rem;
  position: relative;
  cursor: pointer;
  display: flex;
  align-items: center;
  color: var(--text-primary, #333333);
  font-weight: 500;
  transition: color 0.2s ease;
  user-select: none;
}

.checkboxGroup label::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 1.2rem;
  height: 1.2rem;
  border: 2px solid var(--border-color, #e0e0e0);
  border-radius: 4px;
  transition: all 0.2s ease;
  background-color: var(--input-bg, #ffffff);
}

.checkbox:checked + label::before {
  background-color: var(--accent-primary, #0088FE);
  border-color: var(--accent-primary, #0088FE);
}

.checkbox:checked + label::after {
  content: '';
  position: absolute;
  left: 0.45rem;
  top: 50%;
  transform: translateY(-60%) rotate(45deg);
  width: 0.25rem;
  height: 0.6rem;
  border: solid white;
  border-width: 0 2px 2px 0;
  transition: all 0.2s ease;
}

.checkbox:focus + label::before {
  box-shadow: 0 0 0 3px rgba(0, 136, 254, 0.2);
}

.checkboxGroup:hover label::before {
  border-color: var(--accent-primary-light, #4DABFF);
}

/* Danger zone styling */
.dangerZone {
  background-color: rgba(255, 59, 48, 0.05);
  border-radius: 8px;
  padding: 1rem;
  border: 1px dashed rgba(255, 59, 48, 0.3);
  animation: pulse 2s infinite;
}

/* Safer animation for dark mode */
.darkMode .dangerZone,
:global(.dark-mode) .dangerZone {
  animation: dangerPulse 3s infinite !important;
  background-color: rgba(255, 59, 48, 0.1) !important;
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 rgba(255, 59, 48, 0.2); }
  70% { box-shadow: 0 0 0 5px rgba(255, 59, 48, 0); }
  100% { box-shadow: 0 0 0 0 rgba(255, 59, 48, 0); }
}

.dangerButton {
  background-color: #FF3B30;
  color: white;
  transition: all 0.2s ease;
}

.dangerButton:hover:not(:disabled) {
  background-color: #E02C23;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(255, 59, 48, 0.3);
}

.dangerButton:disabled {
  background-color: #ffada9;
  cursor: not-allowed;
  opacity: 0.7;
}

.cancelButton {
  background-color: #E0E0E0;
  color: #333;
}

.cancelButton:hover {
  background-color: #D0D0D0;
}

.warningText {
  color: #FF3B30;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.confirmInput {
  width: 100%;
  padding: 0.6rem;
  border-radius: 6px;
  border: 1px solid var(--border-color, #e0e0e0);
  background-color: var(--input-bg, #ffffff);
  color: var(--text-primary, #333333);
  margin-bottom: 1rem;
  transition: all 0.3s ease;
}

.confirmInput:focus {
  outline: none;
  border-color: #FF3B30;
  box-shadow: 0 0 0 2px rgba(255, 59, 48, 0.2);
}

.dangerActions {
  display: flex;
  gap: 1rem;
}

.deleteConfirmation {
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Light mode variables */
:root {
  --accent-primary: #0088FE;
  --accent-primary-light: #4DABFF;
  --accent-secondary: #00C49F;
  --text-primary: #333333;
  --text-secondary: #666666;
  --card-bg: #ffffff;
  --border-color: #e0e0e0;
  --input-bg: #ffffff;
}

/* Dark mode variables - support both class names for maximum compatibility */
.darkMode {
  --accent-primary: #2196F3;
  --accent-primary-light: #64B5F6;
  --accent-secondary: #00BFA5;
  --text-primary: #E0E0E0;
  --text-secondary: #AAAAAA;
  --card-bg: #2D2D2D;
  --border-color: #444444;
  --input-bg: #3D3D3D;
}

:global(.dark-mode) {
  --accent-primary: #2196F3;
  --accent-primary-light: #64B5F6;
  --accent-secondary: #00BFA5;
  --text-primary: #E0E0E0;
  --text-secondary: #AAAAAA;
  --card-bg: #2D2D2D;
  --border-color: #444444;
  --input-bg: #3D3D3D;
}

/* Form transition effects */
.formSelect, 
.confirmInput {
  transition: border-color 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
}

/* Toggle Switch for checkboxes (alternative style) */
.toggleSwitch {
  position: relative;
  display: inline-block;
  width: 48px;
  height: 24px;
}

.toggleSwitch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggleSlider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--border-color, #e0e0e0);
  transition: .4s;
  border-radius: 24px;
}

.toggleSlider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .toggleSlider {
  background: linear-gradient(135deg, var(--accent-primary, #0088FE), var(--accent-secondary, #00C49F));
}

input:focus + .toggleSlider {
  box-shadow: 0 0 1px var(--accent-primary, #0088FE);
}

input:checked + .toggleSlider:before {
  transform: translateX(24px);
}

/* Responsive styles */
@media (max-width: 768px) {
  .settingsContainer {
    padding: 1rem;
  }
  
  .settingsSection {
    padding: 1rem;
  }
  
  .dangerActions {
    flex-direction: column;
  }
  
  .primaryButton, 
  .secondaryButton, 
  .dangerButton, 
  .cancelButton {
    width: 100%;
  }
}

/* Hover animation for settings sections */
.settingsSection {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.settingsSection:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
}

/* Custom select animation */
.formSelect {
  transition: all 0.3s ease;
}

.formSelect:focus {
  transform: scale(1.02);
}

/* Added animation for the section title */
.sectionTitle::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(to right, var(--accent-primary, #0088FE), var(--accent-secondary, #00C49F));
  transition: width 0.3s ease;
}

.settingsSection:hover .sectionTitle::after {
  width: 100%;
}

/* Checkbox animation - safer version */
.checkbox + label::before {
  transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

.checkbox:checked + label::before {
  transform: translateY(-50%) scale(1.1);
}

/* Dark mode specific styles to ensure visibility */
.darkMode .formSelect,
:global(.dark-mode) .formSelect,
.darkMode .confirmInput,
:global(.dark-mode) .confirmInput {
  background-color: var(--input-bg, #3D3D3D) !important;
  color: var(--text-primary, #E0E0E0) !important;
  border-color: var(--border-color, #444444) !important;
}

.darkMode .checkboxGroup label,
:global(.dark-mode) .checkboxGroup label {
  color: var(--text-primary, #E0E0E0) !important;
}

.darkMode .warningText,
:global(.dark-mode) .warningText {
  color: #FF6B6B !important; /* Brighter red for better visibility in dark mode */
}

/* Pulsing effect for danger zone - safer version */
@keyframes dangerPulse {
  0% {
    border-color: rgba(255, 59, 48, 0.3);
  }
  50% {
    border-color: rgba(255, 59, 48, 0.6);
  }
  100% {
    border-color: rgba(255, 59, 48, 0.3);
  }
}

/* Focus effects */
.primaryButton:focus,
.secondaryButton:focus,
.dangerButton:focus,
.cancelButton:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 136, 254, 0.3);
}

/* Add these styles to your settings.module.css file */

/* Modal Overlay */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Modal Content */
.modalContent {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 25px rgba(0, 0, 0, 0.15);
  width: 90%;
  max-width: 500px;
  padding: 0;
  animation: slideIn 0.3s ease-out;
  overflow: hidden;
}

@keyframes slideIn {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

/* Modal Title */
.modalTitle {
  margin: 0;
  padding: 16px 20px;
  background-color: #f8f8f8;
  border-bottom: 1px solid #eaeaea;
  font-size: 18px;
  font-weight: 600;
  color: #333;
}

/* Modal Body */
.modalBody {
  padding: 20px;
}

/* Warning Text */
.warningText {
  color: #d32f2f;
  margin-bottom: 16px;
  font-weight: 500;
}

/* Confirm Text */
.confirmText {
  margin-bottom: 16px;
  font-size: 14px;
}

/* Error Text */
.errorText {
  color: #d32f2f;
  margin: 12px 0;
  font-size: 14px;
  font-weight: 500;
}

/* Confirm Input */
.confirmInput {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 14px;
  margin-bottom: 20px;
  transition: border-color 0.2s ease;
}

.confirmInput:focus {
  border-color: #0066cc;
  outline: none;
  box-shadow: 0 0 0 2px rgba(0, 102, 204, 0.2);
}

/* Modal Actions */
.modalActions {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
}

/* Cancel Button */
.cancelButton {
  padding: 8px 16px;
  background-color: #f5f5f5;
  color: #333;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.cancelButton:hover {
  background-color: #e8e8e8;
}

.cancelButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Danger Button */
.dangerButton {
  padding: 8px 16px;
  background-color: #d32f2f;
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.dangerButton:hover {
  background-color: #b71c1c;
}

.dangerButton:disabled {
  background-color: #f5f5f5;
  color: #999;
  border: 1px solid #ddd;
  cursor: not-allowed;
}